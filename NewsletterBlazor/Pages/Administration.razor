@page "/Administration"
@attribute [Authorize]

@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using TextCopy

@inject UserManager<IdentityUser> _UserManager
@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject IConfiguration _config
@inject ISnackbar Snackbar
@inject IClipboard Clipboard
@inject IDialogService _dialogService

<AuthorizeView Roles="Admin">
    <Authorized>
        <MudContainer MaxWidth="MaxWidth.Large">
            <MudTabs Elevation="5" Rounded="true" Centered="true">
                <MudTabPanel Icon="@Icons.Material.Filled.Person" Text="Users">
                    <MudTable Items="_usersList" Context="items" Filter="new Func<IdentityUser,bool>(FilterFunc1)" @bind-SelectedItem="_selectedUser"
                              Hover="true" Loading="_loadingUsers" Elevation="5" OnRowClick="CheckRoles">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Users</MudText>
                            <MudSpacer />
                            <MudTextField @bind-Value="_searchEMail" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"/>
                        </ToolBarContent>
                        
                        <HeaderContent>
                            <MudTh>Id</MudTh>
                            <MudTh>Email</MudTh>
                            <MudTh>Is Confirmed</MudTh>
                        </HeaderContent>
                        
                        <RowTemplate>
                            <MudTd DataLabel="Id">
                                <MudTooltip>
                                    <TooltipContent>
                                        <MudText>@items.Id</MudText>
                                    </TooltipContent>
                                    <ChildContent>
                                        <MudText @onclick="@(() => CopyIdToClipboard(items.Id))">@items.Id.ToString().Substring(0, 5)...</MudText>
                                    </ChildContent>
                                </MudTooltip>
                            </MudTd>
                            <MudTd>
                                <MudText @onclick="@(() => CopyIdToClipboard(items.Email))">@items.Email</MudText>
                            </MudTd>
                            <MudTd>
                                <MudCheckBox Checked="@items.EmailConfirmed" Disabled="true"/>
                            </MudTd>
                        </RowTemplate>

                        <PagerContent>
                            <MudTablePager/>
                        </PagerContent>
                    </MudTable>
                    
                    <MudContainer MaxWidth="MaxWidth.Large" Class="mt-4 d-flex flex-row justify-center">
                        <MudContainer>
                            <MudCard Elevation="5">
                                <MudCardHeader>
                                    <CardHeaderContent><MudText>Selected user: @_selectedUser.Email</MudText></CardHeaderContent>
                                    <CardHeaderActions><MudButton StartIcon="@Icons.Material.Filled.Delete" Color="Color.Warning" Variant="Variant.Text" OnClick="ResetForm" >Reset selecting</MudButton></CardHeaderActions>
                                </MudCardHeader>

                                <MudCardContent>
                                    <MudForm @ref="form" @bind-IsValid="@success">
                                        <MudTextField T="string" Label="Email" Required="true" RequiredError="Email is required!" @bind-Value="_selectedUser.Email" For="@(() => _selectedUser.Email)"
                                                      Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})"/>
                                        <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @bind-Value="_selectedUser.PasswordHash" For="@(() => _selectedUser.PasswordHash)"
                                                      InputType="InputType.Password"
                                                      Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                                      RequiredError="Password is required!"/>

                                        <MudButton OnClick="@(() => ConfirmEmail(_selectedUser.Id))" Disabled="@_selectedUser.EmailConfirmed" Color="Color.Primary" Variant="Variant.Filled">Confirm email</MudButton>
                                    </MudForm>
                                </MudCardContent>

                                <MudCardActions>
                                    <MudButton StartIcon="@Icons.Material.Filled.Save" Color="Color.Success" OnClick="SaveUser">Save</MudButton>
                                    <MudButton StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="DeleteUser">Delete</MudButton>
                                </MudCardActions>
                            </MudCard>
                        </MudContainer>

                        <MudContainer>
                            <MudCard Elevation="5">
                                <MudCardHeader>
                                    <CardHeaderContent><MudText>Roles manager</MudText></CardHeaderContent>
                                </MudCardHeader>

                                <MudCardContent>
                                    <MudText>Selected user's roles:</MudText>
                                    @if (_currentUserRoles.Count != 0)
                                    {
                                        foreach (var role in _currentUserRoles)
                                        {
                                            <MudText>@role - <MudButton Color="Color.Primary" Variant="Variant.Text" OnClick="@(() => RemoveRole(role))">Remove</MudButton></MudText>
                                        }
                                    }
                                    else
                                    {
                                        <MudText>User does not have any roles</MudText>
                                    }
                                    <br />
                                    <MudText>Available roles:</MudText>
                                    @if (CheckAvailableRoles())
                                    {
                                        foreach (var role in AllRoles)
                                        {
                                            if (!_currentUserRoles.Contains(role))
                                            {
                                                <MudText>@role - <MudButton Color="Color.Success" Variant="Variant.Text" OnClick="@(() => AddRole(role))">Add</MudButton></MudText>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <MudText>There are not any more available roles</MudText>
                                    }
                                </MudCardContent>
                            </MudCard>
                        </MudContainer>
                    </MudContainer>

                </MudTabPanel>

                <MudTabPanel Icon="@Icons.Material.Filled.Add" Text="Add user">
                    <MudCard Elevation="5">
                        <MudCardHeader>
                            <CardHeaderContent><MudText @onclick="@(() => CopyIdToClipboard(@_newUser.Id))">ID: @_newUser.Id</MudText></CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Material.Filled.Refresh" OnClick="GenerateNewGuid" />
                                <MudButton StartIcon="@Icons.Material.Filled.Delete" Color="Color.Warning" Variant="Variant.Text" OnClick="ResetForm">Reset form</MudButton>
                            </CardHeaderActions>
                        </MudCardHeader>

                        <MudCardContent>
                            <MudForm @ref="form" @bind-IsValid="@success">
                                <MudTextField T="string" Label="Email" Required="true" RequiredError="Email is required!" @bind-Value="_selectedUser.Email" For="@(() => _selectedUser.Email)"
                                              Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />
                                <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @bind-Value="_selectedUser.PasswordHash" For="@(() => _selectedUser.PasswordHash)"
                                              InputType="InputType.Password"
                                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                              RequiredError="Password is required!" />
                            </MudForm>
                        </MudCardContent>

                        <MudCardActions>
                            <MudButton StartIcon="@Icons.Material.Filled.Save" Color="Color.Success" OnClick="CreateUser">Create</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudTabPanel>
            </MudTabs>
        </MudContainer>
    </Authorized>
    <NotAuthorized>
        <p>You don't have permissions to see this page.</p>
        <p>If you're Admin, relogin after getting permissions.</p>
    </NotAuthorized>
</AuthorizeView>
@using Microsoft.AspNetCore.Identity;
@using NewsletterBlazor.Data;
@using NewsletterBlazor.Data.Entities;

@attribute [Authorize(Roles = "User")]

@inject UserManager<IdentityUser> _userManager
@inject ApplicationDbContext _context
@inject ILogger<CreateNewsletter> _logger
@inject IConfiguration _configuration
@inject AuthenticationStateProvider _AuthenticationStateProvider

<MudContainer MaxWidth="MaxWidth.Large" Class="pa-4">
    <EditForm Model="@_mailModel" OnValidSubmit="@HandleForm">
        <MudCard Elevation="5">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h4">Mail</MudText>
                </CardHeaderContent>

                <CardHeaderActions>
                    <MudButton ButtonType="ButtonType.Reset" StartIcon="@Icons.Material.Filled.Restore" >Reset fields</MudButton>
                </CardHeaderActions>
            </MudCardHeader>

            <MudCardContent>
                <MudTextField Class="pa-2" Label="Subject" T="string" @bind-Value="@_mailModel.Subject" Required="true" Variant="Variant.Outlined"/>

                <MudTextField Class="pa-2" Label="Body" T="string" @bind-Value="@_mailModel.Body" Lines="10" Required="true" Variant="Variant.Outlined"/>

                <MudTooltip Text="This options requires html formatting in body like <br> or <h1> if needed">
                    <MudCheckBox T="bool" @bind-Checked="@_mailModel.IsHTML" Label="Is Body HTML" LabelPosition="LabelPosition.Start" Size="Size.Medium" Class="mt-4" />
                </MudTooltip>                

                <MudFileUpload id="AttachmentsFilesChanging" T="IBrowserFile" OnFilesChanged="AddAttachtment">
                    <ButtonTemplate Context="AttachmentsFilesChanging">
                        <MudButton HtmlTag="label" for="AttachmentsFilesChanging" Color="Color.Secondary" Variant="Variant.Filled" ButtonType="ButtonType.Button">
                            Add file
                        </MudButton>
                        <MudText Typo="Typo.body1">`max 5 files`</MudText>
                    </ButtonTemplate>
                </MudFileUpload>
                
                <br />

                @if (_mailModel.Attachtments.Count > 0)
                {
                    <MudText Typo="Typo.subtitle1" Align="Align.Left" Color="Color.Success">Selected files:</MudText>

                    @foreach (var item in _mailModel.Attachtments)
                    {
                        <MudText Typo="Typo.subtitle2" Align="Align.Left">@item.Name, @item.Size b - <MudIconButton StartIcon="@Icons.Material.Filled.Remove" Color="Color.Primary" Variant="Variant.Text" OnClick="@(() => RemoveAttachtment(item.Name, item.Size))">Remove</MudIconButton></MudText>
                    }

                    @if (!string.IsNullOrWhiteSpace(_attachmentsState.Warning))
                    {
                        <MudText Typo="Typo.body1" Color="Color.Warning">@_attachmentsState.Warning</MudText>
                    }
                }

            </MudCardContent>
            
            <MudCardActions>
                <ValidationSummary/>
                <DataAnnotationsValidator/>
            </MudCardActions>
        </MudCard>
        
        <MudCard Elevation="5" Class="mt-4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Actions</MudText>
                </CardHeaderContent>
            </MudCardHeader>

            <MudCardContent>
                <MudFileUpload id="ReceiversFileChanging" T="IBrowserFile" Accept=".txt" OnFilesChanged="LoadReceivers">
                    <ButtonTemplate Context="ReceiversFileChanging">
                        <MudButton HtmlTag="label" for="ReceiversFileChanging" Color="Color.Secondary" Variant="Variant.Filled" ButtonType="ButtonType.Button">
                            Set receivers list
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudCardContent>
            
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Color="Color.Success" Variant="Variant.Filled">Send</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
</MudContainer>

<MudContainer MaxWidth="MaxWidth.Small">
    <MudText Color="Color.Success" Align="Align.Center">@_applicationState.Success</MudText>
    <MudText Color="Color.Warning" Align="Align.Center">@_applicationState.Warning</MudText>
    <MudText Color="Color.Error" Align="Align.Center">@_applicationState.Error</MudText>
</MudContainer>

@if (IsLoadingFiles)
{
    <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex flex-row align-center justify-center my-5">
        <MudProgressCircular Indeterminate="true" Size="Size.Medium" Color="Color.Secondary"/>
        <MudText Typo="Typo.body1" Color="Color.Info"Class="ml-5">Loading Attachments and message settings...</MudText>
    </MudContainer>
}

@if (IsSending & _receiversList.Count > 0)
{
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudProgressLinear Value="@ActualEmail" Min="1" Max="@_receiversList.Count" Color="Color.Secondary" Rounded="true" Size="Size.Medium">
            <MudText Typo="Typo.subtitle1">Progress: @ActualEmail / @_receiversList.Count</MudText>
        </MudProgressLinear>
    </MudContainer>
}

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-5 d-flex flex-row gap-4 justify-center">
    <MudContainer>
        <MudCard Elevation="5">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">All selected mails</MudText>
                </CardHeaderContent>
            </MudCardHeader>
        
            <MudCardContent>
                @if (_receiversList.Count > 0)
                {
                    @if(_receiversList.Count <= 5)
                    {
                        @foreach (var item in _receiversList)
                        {
                            <MudText Color="Color.Info" Typo="Typo.subtitle1">@item</MudText>
                        }
                    }
                    else
                    {
                        @foreach (var item in _receiversList.GetRange(0,5))
                        {
                            <MudText Color="Color.Info" Typo="Typo.subtitle1">@item</MudText>
                        }
                        <MudText Color="Color.Info" Typo="Typo.subtitle1">... @(_receiversList.Count - 5) more</MudText>
                    }
                }
                else
                {
                    <MudText Typo="Typo.subtitle1">Not selected receivers yet</MudText>
                }
            </MudCardContent>
        </MudCard>
    </MudContainer>
    
    <MudSpacer/>

    <MudContainer>
        <MudCard Elevation="5">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">Mails that throwed errors</MudText>
                </CardHeaderContent>
            </MudCardHeader>
        
            <MudCardContent>
                @if (_badReceivers.Count > 0)
                {
                    @foreach (var item in _badReceivers)
                    {
                        <MudText Color="Color.Error" Typo="Typo.subtitle1">@item</MudText>
                    }
                }
                else
                {
                    <MudText Typo="Typo.subtitle1">There is not any bad email yet</MudText>
                }
            </MudCardContent>
            <MudCardActions>
                <MudButton Color="Color.Success" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Try" OnClick="SendMailAgainToBadEmails" Disabled="@(_badReceivers.Count == 0 ? true : false)">Try again</MudButton>
            </MudCardActions>
        </MudCard>
    </MudContainer>
</MudContainer>